/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PACSUS.Java;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;

/* Generated by Together */
/**
 * Vehicle list manages the collection of vehicles currently associated with
 * permits. It handles checks of whether vehicles are allowed through the
 * barriers, records warnings, and various other functions. Note that each
 * Vehicle_info object must have a unique registration number, to allow sensible
 * checking and recording of entries onto the campus (so a HashTable is probably
 * a good implementation of the collection, with registration number as key).
 *
 * There will only be one instance of this class.
 */
public class Vehicle_list {

    private java.util.Hashtable lnkVehicle;
    private Vehicle_info Vehicle_info;

    public Vehicle_list() {
        lnkVehicle = new Hashtable();
    }

    public boolean checkPermitted(String RegNum) {
        return lnkVehicle.containsKey(RegNum);
    }

    public boolean checkPermitted(String RegNum, int day) {
        boolean flag = false;
        if (lnkVehicle.containsKey(RegNum)) {
            {

                String p2 = ((Vehicle_info) lnkVehicle.get(RegNum)).getPermitType();
                System.out.println("The Permit type is " + p2);
                String p3 = (((Vehicle_info) lnkVehicle.get(RegNum)).getVisitday());
                System.out.println("The Visit day details are " + p3);
                String p4 = (((Vehicle_info) lnkVehicle.get(RegNum)).getEndday());
                System.out.println("The End date details are " + p4);

                if (p2 == "Regular Visitor") {
                    if (day >= Integer.parseInt(p3) && day <= Integer.parseInt(p4)) 
                    {
                        flag = true;
                        System.out.println("The regular visitor with Registration number " +RegNum+ " has permission");
                    } else {
                        flag = false;
                        System.out.println("The regular visitor has no permission" +RegNum+ " has no permission");
                    }
                } else {
                    System.out.println("The vehicle registration number is not existing");
                }
                
                if (p2 == "Day Visitor") {
                    if (day == Integer.parseInt(p3) && day <= Integer.parseInt(p4)) 
                    {
                        flag = true;
                        System.out.println("The Day visitor with Rgestration number " +RegNum+ " has permission");
                    } else {
                        flag = false;
                        System.out.println("The Day visitor has no permission" +RegNum+ " has no permission");
                    }
                } else {
                    System.out.println("The vehicle registration number is not existing");
                }
                
                 if (p2 == "Unevesity member") {
                    if (day == Integer.parseInt(p3) && day == Integer.parseInt(p4)) 
                    {
                        flag = true;
                        System.out.println("The Day visitor with Rgestration number " +RegNum+ " has permission");
                    } else {
                        flag = false;
                        System.out.println("The Day visitor has no permission" +RegNum+ " has no permission");
                    }
                } else {
                    System.out.println("The vehicle registration number is not existing");
                }
                 
                if (p2 == "Parmenent Visitor") {
                    if (day == Integer.parseInt(p3) && day == Integer.parseInt(p4)) 
                    {
                        flag = true;
                        System.out.println("The Day visitor with Rgestration number " +RegNum+ " has permission");
                    } else {
                        flag = false;
                        System.out.println("The Day visitor has no permission" +RegNum+ " has no permission");
                    }
                } else {
                    System.out.println("The vehicle registration number is not existing");
                } 
 
            }
        }
        return flag;
    }

    public void add(Permit permit, String RegNum, String CarC) {
        Vehicle_info = new Vehicle_info(permit, RegNum, CarC);
        lnkVehicle.put(RegNum, Vehicle_info);
        System.out.println("The Vehicle table is\n: " + lnkVehicle);
    }

    public Hashtable print(String RegNum, String CarC) {
        Enumeration e = lnkVehicle.elements();
        while (e.hasMoreElements()) {
            System.out.println("The elements are\n:" + e.nextElement());
        }
        return lnkVehicle;
    }

    public boolean remove(String RegNum, String CarC) {
        return lnkVehicle.containsKey(RegNum);
    }

    public void remove(String text, String text0, String text1, String text2) {
        Object obj1 = lnkVehicle.remove("");
        System.out.println(obj1 + " Vehicle Data has removed from Hashtable");
    }
}
